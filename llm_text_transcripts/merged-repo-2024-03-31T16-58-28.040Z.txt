
/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/ADDLIVEPREVIEWURLS.JS CODE IS BELOW
const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');

async function addLivePreviewUrls() {
  try {
    // Read the existing templates JSON file
    const templatesJson = fs.readFileSync('templates.json', 'utf8');
    const templates = JSON.parse(templatesJson);

    console.log(`Found ${templates.length} templates. Starting to add live preview URLs...`);

    // Iterate over each template
    for (const [index, template] of templates.entries()) {
      try {
        console.log(`Processing template ${index + 1}/${templates.length}: ${template.link}`);

        // Make a request to the template's URL
        const response = await axios.get(template.link);
        const $ = cheerio.load(response.data);

        // Find the live preview URL from the button's href attribute
        const livePreviewUrl = $('#hero-browser-preview').attr('href');

        if (livePreviewUrl) {
          // Add the live preview URL to the template object
          template.livePreviewUrl = livePreviewUrl;
          console.log(`Added live preview URL: ${livePreviewUrl}`);
        } else {
          console.log('Live preview URL not found.');
        }
      } catch (error) {
        console.error(`Error processing template: ${template.link}`, error);
      }
    }

    // Write the updated templates array back to the JSON file
    fs.writeFileSync('templates.json', JSON.stringify(templates, null, 2));
    console.log(`Processing completed. Updated ${templates.length} templates in templates.json`);
  } catch (error) {
    console.error('Error processing templates:', error);
  }
}

addLivePreviewUrls();

/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/PUBLIC/APP.JS CODE IS BELOW
const templateGrid = document.getElementById('template-grid');

function createTemplateCard(template) {
  const card = document.createElement('div');
  card.classList.add('template-card');

  const title = document.createElement('h3');
  title.textContent = template.title;
  card.appendChild(title);

  const previewIframe = document.createElement('iframe');
  previewIframe.src = `/proxy?url=${encodeURIComponent(template.livePreviewUrl)}`;
  previewIframe.classList.add('preview-iframe');
  card.appendChild(previewIframe);

  const templateLink = document.createElement('a');
  templateLink.href = template.link;
  templateLink.target = '_blank';
  templateLink.textContent = 'Template URL';
  card.appendChild(templateLink);

  return card;
}

async function loadTemplates() {
  try {
    const response = await fetch('/api/templates');
    const templates = await response.json();
    templates.forEach(template => {
      const card = createTemplateCard(template);
      templateGrid.appendChild(card);
    });
  } catch (error) {
    console.error('Error loading templates:', error);
  }
}

loadTemplates();

/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/PUBLIC/INDEX.HTML CODE IS BELOW
<!DOCTYPE html>
<html>
<head>
  <title>Webflow Template Gallery</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <h1>Webflow Template Gallery</h1>
  <div id="template-grid"></div>
  <script src="app.js"></script>
</body>
</html>

/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/PUBLIC/STYLES.CSS CODE IS BELOW
#template-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
  }
  
  .template-card {
    border: 1px solid #ccc;
    padding: 10px;
  }
  
  .template-card h3 {
    margin-top: 0;
  }
  
  .template-card a {
    display: block;
    margin-bottom: 10px;
  }

  .template-card {
    margin-bottom: 20px;
  }
  
  .preview-iframe {
    width: 100%;
    height: 400px;
    border: none;
  }

  .preview-container {
    position: relative;
  }

  .loading-animation {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 4px solid #ccc;
    border-top-color: #333;
    animation: spin 1s infinite linear;
  }
  
  @keyframes spin {
    0% {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }
  
  .hidden {
    display: none;
  }

/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/SCRAPER.JS CODE IS BELOW
const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');

async function scrapeWebflowTemplates() {
    try {
      const sitemapUrl = 'https://webflow.com/sitemap.xml';
      const response = await axios.get(sitemapUrl);
      const $ = cheerio.load(response.data, { xmlMode: true });
      const templateUrls = $('url > loc')
        .map((_, el) => $(el).text())
        .get()
        .filter(url => url.includes('/templates/html/'));
  
      const templates = [];
  
      console.log(`Found ${templateUrls.length} templates. Starting scraping...`);
  
      for (const [index, templateUrl] of templateUrls.entries()) {
        try {
          console.log(`Scraping template ${index + 1}/${templateUrls.length}: ${templateUrl}`);
  
          const templateResponse = await axios.get(templateUrl);
          const $template = cheerio.load(templateResponse.data);
          const title = $template('title').text();
          const images = $template('.owl-stage img')
            .map((_, el) => $(el).attr('src'))
            .get();
  
          templates.push({
            title,
            images,
            link: templateUrl
          });
  
          console.log(`Added template: ${title}`);
        } catch (error) {
          console.error(`Error scraping template: ${templateUrl}`, error);
        }
      }
  
      fs.writeFileSync('templates.json', JSON.stringify(templates, null, 2));
      console.log(`Scraping completed. ${templates.length} templates saved to templates.json`);
    } catch (error) {
      console.error('Error scraping templates:', error);
    }
  } 

scrapeWebflowTemplates();

/USERS/ROMINMIRMOTAHARI/DOCUMENTS/CUSTOM PROJECTS/WEBFLOW TEMPLATE GALLERY/SERVER.JS CODE IS BELOW
const express = require('express');
const fs = require('fs');
const axios = require('axios');

const app = express();

app.use(express.static('public'));

app.get('/api/templates', (req, res) => {
  const templates = JSON.parse(fs.readFileSync('templates.json', 'utf8'));
  res.json(templates);
});

app.get('/proxy', async (req, res) => {
  try {
    const url = req.query.url;
    const response = await axios.get(url);
    
    res.header('Access-Control-Allow-Origin', '*');
    res.header('X-Frame-Options', 'ALLOW-FROM http://localhost:3000');
    
    res.send(response.data);
  } catch (error) {
    console.error('Error fetching URL:', error);
    res.status(500).send('Error fetching URL');
  }
});

const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
